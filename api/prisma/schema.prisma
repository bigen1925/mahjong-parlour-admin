// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

// 組織
model Organization {
    id              String      @id @default(uuid())
    name            String

    createdAt       DateTime    @default(now())
    updatedAt       DateTime    @updatedAt
}

// 店舗
model Parlour {
    id              String      @id @default(uuid())
    name            String

    organization    Organization
    staffs          Staff[]
    guests          Guest[]

    createdAt       DateTime    @default(now())
    updatedAt       DateTime    @updatedAt
}

// 従業員
model Staff {
    id              String          @id @default(uuid())
    loginId         String          @unique // ログインID
    password        String          // ログインパスワード
    lastName        String          // 姓
    firstName       String          // 名
    gender          Int             // 性別

    organization    Organization
    parlours        Parlour[]
    workingStaff    WorkingStaff?
    player          Player          @relation(fields: [playerId], references: [id])
    playerId        String

    createdAt       DateTime        @default(now())
    updatedAt       DateTime        @updatedAt
}

// 勤務中の従業員
model WorkingStaff {
    id              String      @id @default(uuid())

    staff           Staff       @relation(fields: [staffId], references: [id])
    staffId         String      @unique

    createdAt       DateTime    @default(now())
    updatedAt       DateTime    @updatedAt
}

// 客
model Guest {
    id              String          @id @default(uuid())
    lastName        String          // 姓
    firstName       String          // 名
    gender          Int             // 性別
    email           String          @default("") // メールアドレス
    address         String          @default("") // 住所
    rewardPoints    Int             @default(0) // ポイント

    organization    Organization
    parlours        Parlour[]
    waitingGuest    WaitingGuest?
    player          Player          @relation(fields: [playerId], references: [id])
    playerId        String

    createdAt       DateTime        @default(now())
    updatedAt       DateTime        @updatedAt
}

// 待ち客

model WaitingGuest {
    id              String      @id @default(uuid())

    guest           Guest       @relation(fields: [guestId], references: [id])
    guestId         String      @unique

    createdAt       DateTime    @default(now())
    updatedAt       DateTime    @updatedAt
}

// 卓
model Table {
    id              String      @id @default(uuid())
    name            String

    parlour         Parlour
    players         Player[]

    createdAt       DateTime    @default(now())
    updatedAt       DateTime    @updatedAt
}

// プレイヤー
model Player {
    id              String      @id @default(uuid())
    seat            Int?        // 座席

    table           Table?
    guest           Guest?
    staff           Staff?

    createdAt       DateTime    @default(now())
    updatedAt       DateTime    @updatedAt
}

// 対局
model Game {
    id              String      @id @default(uuid())
    firstDealer     Int        // 起家
    startAt         DateTime    // 開始時刻
    endAt           DateTime    // 終了時刻

    table           Table

    createdAt       DateTime    @default(now())
    updatedAt       DateTime    @updatedAt
}

// 対局結果
model GameResult {
    id              String      @id @default(uuid())
    rank            Int         // 着順

    game            Game        // 対局
    player          Player      // 対局者

    createdAt       DateTime    @default(now())
    updatedAt       DateTime    @updatedAt
}